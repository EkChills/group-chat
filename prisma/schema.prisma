generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  chatRooms     ChatRoom[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ChatRoom {
  id              String    @id @default(cuid())
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  userid          String
  roomDescription String?
  roomName        String?
  user            User      @relation(fields: [userid], references: [id], onDelete: Cascade)
  members         Member[]
  messages        Message[]
}

model Member {
  id         String   @id @default(cuid())
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  chatroomid String
  chatroom   ChatRoom @relation(fields: [chatroomid], references: [id])
  image String?
}

model Message {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  text        String
  chatRoomId  String
  senderId    String
  senderImage String
  senderName  String
  chatRoom    ChatRoom @relation(fields: [chatRoomId], references: [id])
}
